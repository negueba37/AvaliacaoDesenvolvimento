/*8.1) Gere o script de criação das Tabelas*/

CREATE TABLE CARROS (
    CODIGO          INTEGER NOT NULL,
    MODELO          VARCHAR(100) NOT NULL,
    DATALANCAMENTO  DATE NOT NULL
);

ALTER TABLE CARROS ADD CONSTRAINT PK_CARROS PRIMARY KEY (CODIGO);


CREATE TABLE CLIENTE (
    CODIGO  INTEGER NOT NULL,
    CPF     VARCHAR(11) NOT NULL
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE PRIMARY KEY (CODIGO);


CREATE TABLE VENDAS (
    CODIGO         INTEGER NOT NULL,
    CODIGOCLIENTE  INTEGER NOT NULL,
    CODIGOCARRO    INTEGER NOT NULL,
    DATAVENDA      DATE NOT NULL
);

ALTER TABLE VENDAS ADD CONSTRAINT PK_VENDA PRIMARY KEY (CODIGO);


ALTER TABLE VENDAS ADD CONSTRAINT FK_VENDA_CARRO FOREIGN KEY (CODIGOCARRO) REFERENCES CARROS (CODIGO);
ALTER TABLE VENDAS ADD CONSTRAINT FK_VENDA_CLIENTE FOREIGN KEY (CODIGOCLIENTE) REFERENCES CLIENTE (CODIGO);


create or alter procedure EXCLUSAO_VENDA
as
declare variable VCODVENDA integer;
declare variable VCODCLIENTE integer;
begin
          /*Deleta a venda com clientes que comparam dois MAREA*/

    FOR SELECT CODIGO_CLIENTE FROM (
    SELECT CLIENTE.CODIGO AS CODIGO_CLIENTE,VENDAS.DATAVENDA, COUNT(*) QT_COMPRAS FROM VENDAS
    LEFT JOIN CLIENTE ON CLIENTE.CODIGO = VENDAS.CODIGOCLIENTE
    LEFT JOIN CARROS ON CARROS.CODIGO = VENDAS.CODIGOCARRO
    WHERE UPPER(CARROS.MODELO) = 'MAREA'
    GROUP BY CLIENTE.CODIGO,VENDAS.DATAVENDA )
    WHERE QT_COMPRAS = 2
    INTO :VCODCLIENTE
    DO
    BEGIN
    DELETE FROM VENDAS WHERE VENDAS.CODIGOCLIENTE = :VCODCLIENTE;
    END 

    /*Deleta a venda com clientes com cpf diferente de 0 e que comparam carros com ano de lancamento menor 2021*/
    FOR SELECT SKIP 15 VENDAS.CODIGO FROM VENDAS
    LEFT JOIN CLIENTE ON CLIENTE.CODIGO = VENDAS.CODIGOCLIENTE
    LEFT JOIN CARROS ON CARROS.CODIGO = VENDAS.CODIGOCARRO
    WHERE SUBSTRING(CLIENTE.CPF FROM 1 FOR 1) <> 0
    AND EXTRACT(YEAR FROM CARROS.DATALANCAMENTO) < 2021
    INTO VCODVENDA
    DO
    BEGIN
    DELETE FROM VENDAS WHERE VENDAS.CODIGO = :VCODVENDA;
    END

end



/*8.2) A quantidade de vendas do carro Marea:*/
SELECT COUNT(*) QT_VENDAS FROM VENDAS
LEFT JOIN CARROS ON CARROS.CODIGO = VENDAS.CODIGOCARRO
WHERE UPPER(CARROS.MODELO) = 'MAREA'

/*8.3)A quantidade vendas do carro Uno por cliente:*/

SELECT CLIENTE.CODIGO,CLIENTE.CPF,COUNT (*) QT_VENDAS  FROM VENDAS
LEFT JOIN CARROS ON CARROS.CODIGO = VENDAS.CODIGOCARRO
LEFT JOIN CLIENTE ON CLIENTE.CODIGO = VENDAS.CODIGOCLIENTE
WHERE UPPER(CARROS.MODELO) = 'UNO'
GROUP BY CLIENTE.CODIGO, CLIENTE.CPF

/*8.4) A quantidade de clientes que não efetuaram venda:*/

SELECT COUNT(*) QT_CLIENTES FROM CLIENTE
WHERE CLIENTE.CODIGO NOT IN (
SELECT DISTINCT(CLIENTE.CODIGO) FROM VENDAS
LEFT JOIN CLIENTE ON CLIENTE.CODIGO = VENDAS.CODIGOCLIENTE)

/*8.5) Os clientes sorteados*/

SELECT FIRST 15 CLIENTE.CODIGO,CLIENTE.CPF,VENDAS.DATAVENDA FROM VENDAS
LEFT JOIN CLIENTE ON CLIENTE.CODIGO = VENDAS.CODIGOCLIENTE
LEFT JOIN CARROS ON VENDAS.CODIGOCARRO = CARROS.CODIGO
WHERE SUBSTRING(CLIENTE.CPF FROM 1 FOR 1) = 0--:DIGITO_CPF
AND EXTRACT(YEAR FROM CARROS.DATALANCAMENTO) = 2021--:ANO
AND CLIENTE.CODIGO NOT IN  (
    SELECT CODIGO FROM (
    SELECT CLIENTE.CODIGO,COUNT(*) QT_COMPRAS FROM VENDAS
    LEFT JOIN CLIENTE ON CLIENTE.CODIGO = VENDAS.CODIGOCLIENTE
    LEFT JOIN CARROS ON CARROS.CODIGO = VENDAS.CODIGOCARRO
    WHERE UPPER(CARROS.MODELO) = 'MAREA'
    GROUP BY CLIENTE.CODIGO )
    WHERE QT_COMPRAS = 2
    )
GROUP BY CLIENTE.CODIGO,CLIENTE.CPF,VENDAS.DATAVENDA
ORDER BY VENDAS.DATAVENDA



/*8.6) Por último a empresa deseja que você exclua todas as vendas que não são dos clientes sorteados, sem utilizar o comando IN;*/

/*Para solucionar esse problema optei por criar uma procedure*/

execute procedure EXCLUSAO_VENDA;
